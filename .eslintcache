[{"/Users/elijahwilcott/digitalcrafts/bfi250/bfi250/src/components/App.js":"1","/Users/elijahwilcott/digitalcrafts/bfi250/bfi250/src/components/ProgressBar.js":"2","/Users/elijahwilcott/digitalcrafts/bfi250/bfi250/src/components/Footer.js":"3","/Users/elijahwilcott/digitalcrafts/bfi250/bfi250/src/index.js":"4","/Users/elijahwilcott/digitalcrafts/bfi250/bfi250/src/components/RenderCards.js":"5"},{"size":80507,"mtime":1607134547424,"results":"6","hashOfConfig":"7"},{"size":1660,"mtime":1607059655254,"results":"8","hashOfConfig":"7"},{"size":1376,"mtime":1607050290659,"results":"9","hashOfConfig":"7"},{"size":204,"mtime":1607307203286,"results":"10","hashOfConfig":"7"},{"size":674,"mtime":1607051602614,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"a0nslg",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/elijahwilcott/digitalcrafts/bfi250/bfi250/src/components/App.js",[],["24","25"],"/Users/elijahwilcott/digitalcrafts/bfi250/bfi250/src/components/ProgressBar.js",["26"],"import React from 'react';\nimport './ProgressBar.css'\nimport RenderProgressBar from './RenderProgressBar'\n\nclass ProgressBar extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        // Might need some kind of media query to increase minPercent for smaller devices\n        let minPercent = 2;\n        let totalUnseen = (this.props.totalFilms - (this.props.seenTotal + this.props.skippedTotal))\n\n        let seenPercent = Math.ceil(this.props.seenTotal / this.props.totalFilms * 100);\n        if (seenPercent < minPercent) {seenPercent = minPercent};\n\n        let skippedPercent = Math.ceil(this.props.skippedTotal / this.props.totalFilms * 100);\n        if (skippedPercent < minPercent) {skippedPercent = minPercent};\n\n        let unseenPercent = (100 - (seenPercent + skippedPercent));\n\n\n\n        let seenPercentText = seenPercent + '%';\n        let unseenPercentText = unseenPercent + '%';\n        let skippedPercentText = skippedPercent + '%';\n\n        let seenPercentStyle = {\n            width: seenPercentText\n        }\n        let unseenPercentStyle = {\n            width: unseenPercentText\n        }\n        let skippedPercentStyle = {\n            width: skippedPercentText\n        }\n        return (\n            <RenderProgressBar \n                seenPercentStyle={seenPercentStyle} \n                unseenPercentStyle={unseenPercentStyle}\n                skippedPercentStyle={skippedPercentStyle}\n                totalUnseen={totalUnseen}\n                totalSeen={this.props.seenTotal}\n                totalSkipped={this.props.skippedTotal}\n            />\n        )\n    }\n}\n\n\nexport default ProgressBar;","/Users/elijahwilcott/digitalcrafts/bfi250/bfi250/src/components/Footer.js",[],"/Users/elijahwilcott/digitalcrafts/bfi250/bfi250/src/index.js",[],"/Users/elijahwilcott/digitalcrafts/bfi250/bfi250/src/components/RenderCards.js",["27"],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":6,"column":5,"nodeType":"34","messageId":"35","endLine":8,"endColumn":6},{"ruleId":"32","severity":1,"message":"33","line":5,"column":5,"nodeType":"34","messageId":"35","endLine":7,"endColumn":6},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]